{"ast":null,"code":"var _jsxFileName = \"H:\\\\WEB\\\\moviesApp\\\\src\\\\trailers\\\\Trailes.jsx\",\n  _s = $RefreshSig$();\n// App..js\n\nimport { Fragment, useContext, useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport movieTrailer from 'movie-trailer';\nimport './Trailer.css';\nimport { Container } from '../components/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Trailer({\n  moviestitle\n}) {\n  _s();\n  const {\n    toggle\n  } = useContext(Container);\n\n  //Setting up the initial states using\n  // react hook 'useState\"\n  const [video, setVideo] = useState(\"\");\n  const [videoURL, setVideoURL] = useState(\"\");\n\n  //A function to fetch the required URL\n  // and storing it inside the\n  // videoURL state variable\n  useEffect(() => {\n    handleSearch();\n    console.log(moviestitle);\n  }, [videoURL]);\n  function handleSearch() {\n    setVideo(moviestitle);\n    movieTrailer(video).then(res => {\n      setVideoURL(res);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: toggle ? 'TrailerMovie-name-dark' : 'TrailerMovie-name-light',\n        children: moviestitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: videoURL,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Trailer, \"m6TEPkHisWtDn/bGfD4X42RmWTM=\");\n_c = Trailer;\nexport default Trailer;\nvar _c;\n$RefreshReg$(_c, \"Trailer\");","map":{"version":3,"names":["Fragment","useContext","useEffect","useState","ReactPlayer","movieTrailer","Container","jsxDEV","_jsxDEV","Trailer","moviestitle","_s","toggle","video","setVideo","videoURL","setVideoURL","handleSearch","console","log","then","res","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","url","controls","_c","$RefreshReg$"],"sources":["H:/WEB/moviesApp/src/trailers/Trailes.jsx"],"sourcesContent":["// App..js\r\n\r\nimport { Fragment, useContext, useEffect, useState } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport movieTrailer from 'movie-trailer';\r\nimport './Trailer.css'\r\nimport {Container} from '../components/NavBar'\r\n\r\n\r\nfunction Trailer({moviestitle}) {\r\n\r\n\r\n    const {toggle } = useContext(Container)\r\n\r\n\t//Setting up the initial states using\r\n\t// react hook 'useState\"\r\n\tconst [video, setVideo] = useState(\"\");\r\n\tconst [videoURL, setVideoURL] =useState(\"\");\r\n\r\n\t//A function to fetch the required URL\r\n\t// and storing it inside the\r\n\t// videoURL state variable\r\n    useEffect(()=>{\r\n        handleSearch();\r\n        console.log(moviestitle);\r\n    },[videoURL])\r\n\tfunction handleSearch() {\r\n        setVideo(moviestitle)\r\n\t\tmovieTrailer(video).then((res) => {\r\n\t\t\tsetVideoURL(res);\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n        <Fragment>\r\n            <div className='Container'>\r\n            </div>\r\n            <div className='player'>\r\n                <h1 id={toggle ? 'TrailerMovie-name-dark' : 'TrailerMovie-name-light'} >{moviestitle}</h1>\r\n            <ReactPlayer  url={videoURL} controls={true} />\r\n            </div>\r\n\t\t\r\n        </Fragment>\r\n\t\t\r\n\t);\r\n}\r\n\r\nexport default Trailer;\r\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjE,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAO,eAAe;AACtB,SAAQC,SAAS,QAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9C,SAASC,OAAOA,CAAC;EAACC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAG5B,MAAM;IAACC;EAAO,CAAC,GAAGX,UAAU,CAACK,SAAS,CAAC;;EAE1C;EACA;EACA,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAEb,QAAQ,CAAC,EAAE,CAAC;;EAE3C;EACA;EACA;EACGD,SAAS,CAAC,MAAI;IACVe,YAAY,CAAC,CAAC;IACdC,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC;EAC5B,CAAC,EAAC,CAACK,QAAQ,CAAC,CAAC;EAChB,SAASE,YAAYA,CAAA,EAAG;IACjBH,QAAQ,CAACJ,WAAW,CAAC;IAC3BL,YAAY,CAACQ,KAAK,CAAC,CAACO,IAAI,CAAEC,GAAG,IAAK;MACjCL,WAAW,CAACK,GAAG,CAAC;IACjB,CAAC,CAAC;EACH;EAEA,oBACOb,OAAA,CAACR,QAAQ;IAAAsB,QAAA,gBACLd,OAAA;MAAKe,SAAS,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACNnB,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBd,OAAA;QAAIoB,EAAE,EAAEhB,MAAM,GAAG,wBAAwB,GAAG,yBAA0B;QAAAU,QAAA,EAAGZ;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9FnB,OAAA,CAACJ,WAAW;QAAEyB,GAAG,EAAEd,QAAS;QAACe,QAAQ,EAAE;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAGnB;AAAChB,EAAA,CApCQF,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAsChB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}